a)
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 412 bytes | 412.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/cschwing/Assignment1
   043a11f..bce0d57  master -> master

b) 5 commits. git rev-list --all --count

c) Last modified on Thu Jan 10 16:45:38 2019 -0500
   Command used: git log -1 --format="%ad" -- .gitignore

d) Branching is useful in a git repository to allow parallel developement of different
   features by multiple users, and to allow better version control by 
   splitting the developement process up into clearly defined paths

e)  The git status command displays the state of the working directory and the staging area
    A Git log is a running record of commits and their information. The commands
	are completely different.

f) To achieve this, use the command git log --follow -- Weapon.h

g) To achieve this, use the command git log --grep=file

h) Inheritance allows the creation of objects that have all of the properties of a parent object,
	along with some others only available to the child class. 
   Polymorphism is a way of treating generic objects as different types. One interface can be used
	to define multiple different objects, all behaving in the same way.
   Encapsulation is the idea of bundling different functions and variables to create a sort of
	blue print for an object. This is basically a class. Data can be hidden from the user, and if
	the user needs to access it, functions (methods in Java) can be added that allow this access

i) The integration manager workflow involves one integration manager who contributes to one repository,
	which is cloned by developers, and ultimately merged back by the integration manager.
	The dictator/lieutenant model is better for large projects. Each lieutenant is responsible for
	their own part of the project, but everything is ultimately managed by the dictator. 
	The main difference here is that in the dictator/lieutenant model, one person is responsible for
	pushing every one else's work to the blessed repository.
j) The centralized workflow would not be good for a project with 100 developers. It would be
	absolute chaos, since they all contribute directly to the blessed repository. In the dictator model,
	everything is organized into a hierarchy, and developers can all work on their own individual
	parts without having to worry about other developer's pushing to the repository. 